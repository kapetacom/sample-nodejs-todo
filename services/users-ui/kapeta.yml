kind: kapeta://kapeta/block-type-frontend:1.3.5
metadata:
  name: kapeta/nodejs-sample-user-ui
  title: User UI
  visibility: public
spec:
  target:
    kind: kapeta://kapeta/language-target-react-ts:3.1.2
  entities:
    types:
      - type: dto
        name: UserRegistration
        description: null
        properties:
          name:
            type: string
            description: null
            secret: false
            required: true
            global: false
          email:
            type: string
            description: null
            secret: false
            required: true
            global: false
      - type: dto
        name: UserActivation
        description: null
        properties:
          id:
            type: string
            description: null
            secret: false
            required: true
            global: false
          password:
            type: string
            description: null
            secret: false
            required: true
            global: false
          password2:
            type: string
            description: null
            secret: false
            required: true
            global: false
      - type: dto
        name: UserAuthentication
        description: null
        properties:
          email:
            type: string
            description: null
            secret: false
            required: true
            global: false
          password:
            type: string
            description: null
            secret: false
            required: true
            global: false
      - type: dto
        name: User
        description: null
        properties:
          id:
            type: string
            description: null
            secret: false
            required: true
            global: false
          name:
            type: string
            description: null
            secret: false
            required: true
            global: false
          email:
            type: string
            description: null
            secret: false
            required: true
            global: false
      - type: dto
        name: UserSession
        description: null
        properties:
          token:
            type: string
            description: null
            secret: false
            required: true
            global: false
          user:
            ref: User
            description: null
            secret: false
            required: true
            global: false
      - type: dto
        name: PasswordChangeRequest
        description: null
        properties:
          id:
            type: string
            description: null
            secret: false
            required: true
            global: false
          oldPassword:
            type: string
            description: null
            secret: false
            required: true
            global: false
          password:
            type: string
            description: null
            secret: false
            required: true
            global: false
          password2:
            type: string
            description: null
            secret: false
            required: true
            global: false
    source:
      type: kapeta-dsl
      value: |-
        UserRegistration {
        	name: string
        	email: string
        }

        UserActivation {
        	id: string
        	password: string
        	password2: string
        }

        UserAuthentication {
        	email: string
        	password: string
        }

        User {
        	id: string
        	name: string
        	email: string
        }

        UserSession {
        	token: string
        	user: User
        }

        PasswordChangeRequest {
        	id: string
        	oldPassword: string
        	password: string
        	password2: string
        }
  providers:
    - kind: kapeta://kapeta/resource-type-web-page:0.0.13
      metadata:
        name: userweb
      spec:
        port:
          type: web
        path: /
  consumers:
    - kind: kapeta://kapeta/resource-type-rest-client:1.1.1
      metadata:
        name: users
      spec:
        port:
          type: rest
        methods:
          registerUser:
            responseType:
              type: void
            method: POST
            path: /register
            description: Register new user
            arguments:
              user:
                ref: UserRegistration
                transport: BODY
          activateUser:
            responseType:
              type: void
            method: POST
            path: /activate
            description: Activate user registration
            arguments:
              user:
                ref: UserActivation
                transport: BODY
          authenticationUser:
            responseType:
              ref: UserSession
            method: POST
            path: /authenticate
            description: Authenticate user
            arguments:
              user:
                ref: UserAuthentication
                transport: BODY
          resetPassword:
            responseType:
              type: void
            method: POST
            path: /reset_password
            description: Reset password for user
            arguments:
              email:
                type: string
                transport: QUERY
          changePassword:
            responseType:
              type: void
            method: POST
            path: /change_password
            description: Change password for user
            arguments:
              change:
                ref: PasswordChangeRequest
                transport: BODY
          getUser:
            responseType:
              ref: User
            method: GET
            path: /users/{id}
            description: Get user by id
            arguments:
              id:
                type: string
                transport: PATH
        source:
          type: kapeta-dsl
          value: |
            //Register new user
            @POST("/register")
            registerUser(@Body user:UserRegistration):void

            //Activate user registration
            @POST("/activate")
            activateUser(@Body user:UserActivation):void

            //Authenticate user
            @POST("/authenticate")
            authenticationUser(@Body user:UserAuthentication):UserSession

            //Reset password for user
            @POST("/reset_password")
            resetPassword(@Query email:string):void

            //Change password for user
            @POST("/change_password")
            changePassword(@Body change:PasswordChangeRequest):void

            //Get user by id
            @GET("/users/{id}")
            getUser(@Path id:string):User
  icon:
    type: url
    value: https://storage.googleapis.com/asset-attachments/kapeta/nodejs-sample-user-ui/icon.svg?v=1690057455206

kind: kapeta/block-type-frontend:0.0.9
metadata:
  name: kapeta/nodejs-sample-todo-ui
  title: Todo UI
spec:
  target:
    kind: kapeta/language-target-react-ts:0.0.21
  entities:
    types:
      - type: dto
        name: Task
        description: null
        properties:
          id:
            description: null
            type: string
            properties: null
          userId:
            description: null
            type: string
            properties: null
          title:
            description: null
            type: string
            properties: null
          description:
            description: null
            type: string
            properties: null
          done:
            description: null
            type: boolean
            properties: null
    source:
      type: kapeta-dsl
      value: |-
        Task {
        	id: string
        	userId: string
        	title: string
        	description: string
        	done: boolean
        }
  providers:
    - kind: kapeta/resource-type-web-page:0.0.7
      metadata:
        name: todoweb
      spec:
        port:
          type: web
        path: /
  consumers:
    - kind: kapeta/resource-type-rest-client:1.0.2
      metadata:
        name: tasks
      spec:
        port:
          type: rest
        methods:
          getTasks:
            responseType:
              ref: Task[]
            method: GET
            path: /tasks/{userId}
            description: Get all tasks for user
            arguments:
              userId:
                type: string
                transport: PATH
          addTask:
            responseType:
              type: void
            method: POST
            path: /tasks/{userId}/{id}
            description: Add task for user
            arguments:
              userId:
                type: string
                transport: PATH
              id:
                type: string
                transport: PATH
              task:
                ref: Task
                transport: BODY
          markAsDone:
            responseType:
              type: void
            method: POST
            path: /tasks/{userId}/{id}/done
            description: Mark task as done
            arguments:
              userId:
                type: string
                transport: PATH
              id:
                type: string
                transport: PATH
          removeTask:
            responseType:
              type: void
            method: DELETE
            path: /tasks/{userId}/{id}
            description: Delete task
            arguments:
              userId:
                type: string
                transport: PATH
              id:
                type: string
                transport: PATH
          removeTasks:
            responseType:
              type: void
            method: DELETE
            path: /tasks/{userId}
            description: "Delete all tasks for user "
            arguments:
              userId:
                type: string
                transport: PATH
        source:
          type: kapeta-dsl
          value: |-
            //Get all tasks for user
            @GET("/tasks/{userId}")
            getTasks(@Path userId:string):Task[]

            //Add task for user
            @POST("/tasks/{userId}/{id}")
            addTask(@Path userId:string, @Path id:string, @Body task:Task):void

            //Mark task as done
            @POST("/tasks/{userId}/{id}/done")
            markAsDone(@Path userId:string, @Path id:string):void

            //Delete task
            @DELETE("/tasks/{userId}/{id}")
            removeTask(@Path userId:string, @Path id:string):void

            //Delete all tasks for user 
            @DELETE("/tasks/{userId}")
            removeTasks(@Path userId:string):void
